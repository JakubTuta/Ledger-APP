syntax = "proto3";

package auth;

service AuthService {
  // Account operations
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  
  // Project operations
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse);
  
  // API key operations
  rpc CreateApiKey(CreateApiKeyRequest) returns (CreateApiKeyResponse);
  rpc ValidateApiKey(ValidateApiKeyRequest) returns (ValidateApiKeyResponse);
  rpc RevokeApiKey(RevokeApiKeyRequest) returns (RevokeApiKeyResponse);

  // Dashboard panel operations
  rpc GetDashboardPanels(GetDashboardPanelsRequest) returns (GetDashboardPanelsResponse);
  rpc CreateDashboardPanel(CreateDashboardPanelRequest) returns (CreateDashboardPanelResponse);
  rpc UpdateDashboardPanel(UpdateDashboardPanelRequest) returns (UpdateDashboardPanelResponse);
  rpc DeleteDashboardPanel(DeleteDashboardPanelRequest) returns (DeleteDashboardPanelResponse);
}

// ==================== Account Messages ====================

message RegisterRequest {
  string email = 1;
  string password = 2;
  string plan = 3;
}

message RegisterResponse {
  int64 account_id = 1;
  string email = 2;
  string plan = 3;
  string name = 4;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 account_id = 1;
  string email = 2;
  string plan = 3;
  string access_token = 4;
}

message GetAccountRequest {
  int64 account_id = 1;
}

message GetAccountResponse {
  int64 account_id = 1;
  string email = 2;
  string plan = 3;
  string status = 4;
  string name = 5;
  string created_at = 6;
}

// ==================== Project Messages ====================

message CreateProjectRequest {
  int64 account_id = 1;
  string name = 2;
  string slug = 3;
  string environment = 4;
}

message CreateProjectResponse {
  int64 project_id = 1;
  string name = 2;
  string slug = 3;
  string environment = 4;
  int32 retention_days = 5;
  int64 daily_quota = 6;
}

message GetProjectsRequest {
  int64 account_id = 1;
}

message ProjectInfo {
  int64 project_id = 1;
  string name = 2;
  string slug = 3;
  string environment = 4;
  int32 retention_days = 5;
  int64 daily_quota = 6;
}

message GetProjectsResponse {
  repeated ProjectInfo projects = 1;
}

// ==================== API Key Messages ====================

message CreateApiKeyRequest {
  int64 project_id = 1;
  string name = 2;
}

message CreateApiKeyResponse {
  int64 key_id = 1;
  string full_key = 2;  // Only returned once!
  string key_prefix = 3;
}

message ValidateApiKeyRequest {
  string api_key = 1;
}

message ValidateApiKeyResponse {
  bool valid = 1;
  int64 project_id = 2;
  int64 account_id = 3;
  int64 daily_quota = 4;
  int32 retention_days = 5;
  int32 rate_limit_per_minute = 6;
  int32 rate_limit_per_hour = 7;
  int64 current_usage = 8;
  string error_message = 9;
}

message RevokeApiKeyRequest {
  int64 key_id = 1;
}

message RevokeApiKeyResponse {
  bool success = 1;
}

// ==================== Dashboard Panel Messages ====================

message Panel {
  string id = 1;
  string name = 2;
  int32 index = 3;
  string project_id = 4;
  string time_range_from = 5;
  string time_range_to = 6;
  string type = 7;
}

message GetDashboardPanelsRequest {
  int64 user_id = 1;
}

message GetDashboardPanelsResponse {
  repeated Panel panels = 1;
}

message CreateDashboardPanelRequest {
  int64 user_id = 1;
  string name = 2;
  int32 index = 3;
  string project_id = 4;
  string time_range_from = 5;
  string time_range_to = 6;
  string type = 7;
}

message CreateDashboardPanelResponse {
  Panel panel = 1;
}

message UpdateDashboardPanelRequest {
  int64 user_id = 1;
  string panel_id = 2;
  string name = 3;
  int32 index = 4;
  string project_id = 5;
  string time_range_from = 6;
  string time_range_to = 7;
  string type = 8;
}

message UpdateDashboardPanelResponse {
  Panel panel = 1;
}

message DeleteDashboardPanelRequest {
  int64 user_id = 1;
  string panel_id = 2;
}

message DeleteDashboardPanelResponse {
  bool success = 1;
}